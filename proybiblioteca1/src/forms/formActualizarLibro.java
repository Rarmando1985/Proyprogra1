/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import java.awt.Image;
import proybiblioteca.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author esleyder-torres
 */
public class formActualizarLibro extends javax.swing.JFrame {

    private String libroIDActualizar = null; // Para almacenar el ID del libro que se está actualizando
    private byte[] portadaBLOBActualizar = null;

    public formActualizarLibro() {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        habilitarCamposActualizar(false);
        btnGuardarCambios.setEnabled(false);
        btnEliminarDesdeActualizar.setEnabled(false);
    }
    private void limpiarCamposActualizar() {
        txtBuscarActualizar.setText("");
        txtTituloActualizar.setText("");
        txtISBNActualizar.setText("");
        txtGeneroActualizar.setText("");
        txtCantidadActualizar.setText("");
        txtAutorActualizar.setText("");
        txtAnioActualizar.setText("");
        txtEditorialActualizar.setText("");
        txtIdiomaActualizar.setText("");
        txtRatingActualizar.setText("");
        lblPortadaActualizar.setIcon(null);
        lblPortadaActualizar.setText("Portada");
        portadaBLOBActualizar = null;
    }

    private void habilitarCamposActualizar(boolean habilitar) {
        txtTituloActualizar.setEnabled(habilitar);
        txtISBNActualizar.setEnabled(habilitar);
        txtGeneroActualizar.setEnabled(habilitar);
        txtCantidadActualizar.setEnabled(habilitar);
        txtAutorActualizar.setEnabled(habilitar);
        txtAnioActualizar.setEnabled(habilitar);
        txtEditorialActualizar.setEnabled(habilitar);
        txtIdiomaActualizar.setEnabled(habilitar);
        txtRatingActualizar.setEnabled(habilitar);
        btnCargarPortadaActualizar.setEnabled(habilitar);
    }

    private void mostrarPortada(byte[] portadaBytes) {
        if (portadaBytes != null && portadaBytes.length > 0) {
            try {
                java.awt.image.BufferedImage bufferedImage = javax.imageio.ImageIO.read(new java.io.ByteArrayInputStream(portadaBytes));
                if (bufferedImage != null) {
                    java.awt.Image scaledImage = bufferedImage.getScaledInstance(lblPortadaActualizar.getWidth(), lblPortadaActualizar.getHeight(), java.awt.Image.SCALE_SMOOTH);
                    lblPortadaActualizar.setIcon(new javax.swing.ImageIcon(scaledImage));
                    lblPortadaActualizar.setText("");
                } else {
                    lblPortadaActualizar.setIcon(null);
                    lblPortadaActualizar.setText("No Image");
                }
            } catch (java.io.IOException e) {
                lblPortadaActualizar.setIcon(null);
                lblPortadaActualizar.setText("Error");
                e.printStackTrace();
            }
        } else {
            lblPortadaActualizar.setIcon(null);
            lblPortadaActualizar.setText("Portada");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtAnioActualizar = new javax.swing.JTextField();
        txtTituloActualizar = new javax.swing.JTextField();
        txtISBNActualizar = new javax.swing.JTextField();
        txtGeneroActualizar = new javax.swing.JTextField();
        txtCantidadActualizar = new javax.swing.JTextField();
        txtAutorActualizar = new javax.swing.JTextField();
        txtIdiomaActualizar = new javax.swing.JTextField();
        txtEditorialActualizar = new javax.swing.JTextField();
        btnGuardarCambios = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtBuscarActualizar = new javax.swing.JTextField();
        btnBuscarLibroActualizar = new javax.swing.JButton();
        btnCancelarActualizar = new javax.swing.JButton();
        btnEliminarDesdeActualizar = new javax.swing.JButton();
        lblPortadaActualizar = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtRatingActualizar = new javax.swing.JTextField();
        btnCargarPortadaActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel1.setText("Título:");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel2.setText("ISBN:");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel3.setText("Género:");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel4.setText("Cantidad:");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel5.setText("Autor:");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel6.setText("Año:");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel7.setText("Editorial:");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel8.setText("Idioma:");
        jLabel8.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        txtAnioActualizar.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        txtAnioActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnioActualizarActionPerformed(evt);
            }
        });

        txtTituloActualizar.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        txtTituloActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTituloActualizarActionPerformed(evt);
            }
        });

        txtISBNActualizar.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        txtISBNActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtISBNActualizarActionPerformed(evt);
            }
        });

        txtGeneroActualizar.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        txtGeneroActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGeneroActualizarActionPerformed(evt);
            }
        });

        txtCantidadActualizar.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        txtCantidadActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActualizarActionPerformed(evt);
            }
        });

        txtAutorActualizar.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        txtAutorActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAutorActualizarActionPerformed(evt);
            }
        });

        txtIdiomaActualizar.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        txtIdiomaActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdiomaActualizarActionPerformed(evt);
            }
        });

        txtEditorialActualizar.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        txtEditorialActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEditorialActualizarActionPerformed(evt);
            }
        });

        btnGuardarCambios.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        btnGuardarCambios.setText("ACTUALIZAR");
        btnGuardarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCambiosActionPerformed(evt);
            }
        });

        jLabel9.setText("INGRESE ISBN / ID: ");

        txtBuscarActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActualizarActionPerformed(evt);
            }
        });

        btnBuscarLibroActualizar.setText("Buscar");
        btnBuscarLibroActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarLibroActualizarActionPerformed(evt);
            }
        });

        btnCancelarActualizar.setText("CANCELAR");
        btnCancelarActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActualizarActionPerformed(evt);
            }
        });

        btnEliminarDesdeActualizar.setFont(new java.awt.Font("Liberation Sans", 0, 24)); // NOI18N
        btnEliminarDesdeActualizar.setText("ELIMINAR");
        btnEliminarDesdeActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDesdeActualizarActionPerformed(evt);
            }
        });

        lblPortadaActualizar.setText("                   Portada");
        lblPortadaActualizar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel11.setText("Rating:");
        jLabel11.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel12.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel12.setText("Portada:");
        jLabel12.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        txtRatingActualizar.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        txtRatingActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRatingActualizarActionPerformed(evt);
            }
        });

        btnCargarPortadaActualizar.setText("Cargar imagen nueva");
        btnCargarPortadaActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarPortadaActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtBuscarActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnBuscarLibroActualizar))
                                    .addComponent(txtTituloActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtISBNActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtGeneroActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCantidadActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAutorActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAnioActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIdiomaActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEditorialActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtRatingActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                                    .addComponent(btnCargarPortadaActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(48, 48, 48)
                        .addComponent(lblPortadaActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnGuardarCambios, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEliminarDesdeActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(147, 147, 147)
                                .addComponent(btnCancelarActualizar)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtBuscarActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarLibroActualizar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtTituloActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtISBNActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtGeneroActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtCantidadActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtAutorActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtAnioActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtEditorialActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(txtIdiomaActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtRatingActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(btnCargarPortadaActualizar)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(lblPortadaActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarCambios, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarDesdeActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(btnCancelarActualizar)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAnioActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnioActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnioActualizarActionPerformed

    private void txtTituloActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTituloActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTituloActualizarActionPerformed

    private void txtISBNActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtISBNActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtISBNActualizarActionPerformed

    private void txtGeneroActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGeneroActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGeneroActualizarActionPerformed

    private void txtCantidadActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadActualizarActionPerformed

    private void txtAutorActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAutorActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAutorActualizarActionPerformed

    private void txtIdiomaActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdiomaActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdiomaActualizarActionPerformed

    private void txtEditorialActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEditorialActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEditorialActualizarActionPerformed

    private void btnBuscarLibroActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarLibroActualizarActionPerformed
String buscarPorISBN = txtBuscarActualizar.getText().trim();
        if (buscarPorISBN.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese el ISBN del libro a buscar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Conexion cc = new Conexion();
        Connection cn = cc.conectar();
        String sql = "SELECT Id_libro, Titulo, ISBN, genero, cantidad, Autor, Portada, anio_publicacion, editorial, idioma, Rating_promedio FROM Libros WHERE ISBN = ?";
        ResultSet rs = null;
        PreparedStatement pst = null;

        try {
            pst = cn.prepareStatement(sql);
            pst.setString(1, buscarPorISBN);
            rs = pst.executeQuery();

            if (rs.next()) {
                libroIDActualizar = rs.getString("Id_libro");
                txtTituloActualizar.setText(rs.getString("Titulo"));
                txtISBNActualizar.setText(rs.getString("ISBN"));
                txtGeneroActualizar.setText(rs.getString("genero"));
                txtCantidadActualizar.setText(String.valueOf(rs.getInt("cantidad")));
                txtAutorActualizar.setText(rs.getString("Autor"));
                txtAnioActualizar.setText(rs.getString("anio_publicacion"));
                txtEditorialActualizar.setText(rs.getString("editorial"));
                txtIdiomaActualizar.setText(rs.getString("idioma"));
                txtRatingActualizar.setText(String.valueOf(rs.getDouble("Rating_promedio")));

                byte[] portadaActual = rs.getBytes("Portada");
                mostrarPortada(portadaActual);
                portadaBLOBActualizar = portadaActual; // Mantener la portada actual para guardar si no se carga una nueva

                habilitarCamposActualizar(true);
                btnGuardarCambios.setEnabled(true);
                btnEliminarDesdeActualizar.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró ningún libro con ese ISBN.", "Información", JOptionPane.INFORMATION_MESSAGE);
                limpiarCamposActualizar();
                habilitarCamposActualizar(false);
                btnGuardarCambios.setEnabled(false);
                btnEliminarDesdeActualizar.setEnabled(false);
                libroIDActualizar = null;
                portadaBLOBActualizar = null;
                lblPortadaActualizar.setIcon(null);
                lblPortadaActualizar.setText("Portada");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al buscar el libro: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (rs != null) rs.close();
                if (pst != null) pst.close();
                if (cn != null) cn.close();
            } catch (SQLException ex) {
                System.err.println("Error al cerrar la conexión: " + ex.getMessage());
            }
        }
    
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarLibroActualizarActionPerformed

    private void txtBuscarActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActualizarActionPerformed

    private void btnGuardarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCambiosActionPerformed
if (libroIDActualizar == null) {
            JOptionPane.showMessageDialog(this, "Primero debes buscar un libro para actualizar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Conexion cc = new Conexion();
        Connection cn = cc.conectar();
        String sql = "UPDATE Libros SET Titulo = ?, ISBN = ?, genero = ?, cantidad = ?, Autor = ?, anio_publicacion = ?, editorial = ?, idioma = ?, Rating_promedio = ?, Portada = ? WHERE Id_libro = ?";

        try (PreparedStatement pst = cn.prepareStatement(sql)) {
            pst.setString(1, txtTituloActualizar.getText().trim());
            pst.setString(2, txtISBNActualizar.getText().trim());
            pst.setString(3, txtGeneroActualizar.getText().trim());
            try {
                pst.setInt(4, Integer.parseInt(txtCantidadActualizar.getText().trim()));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "La cantidad debe ser un número entero.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            pst.setString(5, txtAutorActualizar.getText().trim());
            pst.setString(6, txtAnioActualizar.getText().trim());
            pst.setString(7, txtEditorialActualizar.getText().trim());
            pst.setString(8, txtIdiomaActualizar.getText().trim());
            try {
                pst.setDouble(9, Double.parseDouble(txtRatingActualizar.getText().trim()));
            } catch (NumberFormatException e) {
                pst.setNull(9, java.sql.Types.REAL); // Permitir valores nulos o usar un valor por defecto
            }
            pst.setBytes(10, portadaBLOBActualizar);
            pst.setString(11, libroIDActualizar);

            int resultado = pst.executeUpdate();
            if (resultado > 0) {
                JOptionPane.showMessageDialog(this, "Libro actualizado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                limpiarCamposActualizar();
                habilitarCamposActualizar(false);
                btnGuardarCambios.setEnabled(false);
                btnEliminarDesdeActualizar.setEnabled(false);
                libroIDActualizar = null;
                portadaBLOBActualizar = null;
                lblPortadaActualizar.setIcon(null);
                lblPortadaActualizar.setText("Portada");
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar el libro.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error con la base de datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (cn != null) cn.close();
            } catch (SQLException ex) {
                System.err.println("Error al cerrar la conexión: " + ex.getMessage());
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGuardarCambiosActionPerformed

    private void btnCancelarActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActualizarActionPerformed
this.dispose(); // Cierra el formulario
    

        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarActualizarActionPerformed

    private void btnEliminarDesdeActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDesdeActualizarActionPerformed
 if (libroIDActualizar == null) {
            JOptionPane.showMessageDialog(this, "Primero debes buscar un libro para eliminar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String isbnEliminar = txtISBNActualizar.getText().trim();
        String tituloLibro = txtTituloActualizar.getText().trim();

        if (isbnEliminar.isEmpty() || tituloLibro.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No se puede eliminar. El ISBN o el título no están cargados.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Conexion cc = new Conexion();
        Connection cn = cc.conectar();
        String sqlEliminar = "DELETE FROM Libros WHERE Id_libro = ?";
        PreparedStatement pstEliminar = null;

        int confirmacion = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea eliminar el libro \"" + tituloLibro + "\" con ISBN " + isbnEliminar + "?", "Confirmar Eliminación", JOptionPane.YES_NO_OPTION);
        if (confirmacion == JOptionPane.YES_OPTION) {
            try {
                pstEliminar = cn.prepareStatement(sqlEliminar);
                pstEliminar.setString(1, libroIDActualizar);
                int resultado = pstEliminar.executeUpdate();
                if (resultado > 0) {
                    JOptionPane.showMessageDialog(this, "Libro \"" + tituloLibro + "\" con ISBN " + isbnEliminar + " eliminado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    limpiarCamposActualizar();
                    habilitarCamposActualizar(false);
                    btnGuardarCambios.setEnabled(false);
                    btnEliminarDesdeActualizar.setEnabled(false);
                    libroIDActualizar = null;
                    portadaBLOBActualizar = null;
                    lblPortadaActualizar.setIcon(null);
                    lblPortadaActualizar.setText("Portada");
                } else {
                    JOptionPane.showMessageDialog(this, "Error al eliminar el libro.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error con la base de datos al eliminar: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            } finally {
                try {
                    if (pstEliminar != null) pstEliminar.close();
                    if (cn != null) cn.close();
                } catch (SQLException ex) {
                    System.err.println("Error al cerrar la conexión: " + ex.getMessage());
                }
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarDesdeActualizarActionPerformed

    private void txtRatingActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRatingActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRatingActualizarActionPerformed

    private void btnCargarPortadaActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarPortadaActualizarActionPerformed
JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos de imagen", "jpg", "jpeg", "png", "gif");
        fileChooser.setFileFilter(filtro);

        int resultado = fileChooser.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivoSeleccionado = fileChooser.getSelectedFile();
            try (FileInputStream fis = new FileInputStream(archivoSeleccionado)) {
                portadaBLOBActualizar = fis.readAllBytes();
                // Mostrar vista previa de la nueva imagen
                ImageIcon icon = new ImageIcon(portadaBLOBActualizar);
                Image scaledImage = icon.getImage().getScaledInstance(lblPortadaActualizar.getWidth(), lblPortadaActualizar.getHeight(), Image.SCALE_SMOOTH);
                lblPortadaActualizar.setIcon(new ImageIcon(scaledImage));
                lblPortadaActualizar.setText("");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error al cargar la nueva portada.", "Error", JOptionPane.ERROR_MESSAGE);
                portadaBLOBActualizar = null;
                lblPortadaActualizar.setIcon(null);
                lblPortadaActualizar.setText("Error");
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCargarPortadaActualizarActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formActualizarLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formActualizarLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formActualizarLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formActualizarLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formActualizarLibro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarLibroActualizar;
    private javax.swing.JButton btnCancelarActualizar;
    private javax.swing.JButton btnCargarPortadaActualizar;
    private javax.swing.JButton btnEliminarDesdeActualizar;
    private javax.swing.JButton btnGuardarCambios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblPortadaActualizar;
    private javax.swing.JTextField txtAnioActualizar;
    private javax.swing.JTextField txtAutorActualizar;
    private javax.swing.JTextField txtBuscarActualizar;
    private javax.swing.JTextField txtCantidadActualizar;
    private javax.swing.JTextField txtEditorialActualizar;
    private javax.swing.JTextField txtGeneroActualizar;
    private javax.swing.JTextField txtISBNActualizar;
    private javax.swing.JTextField txtIdiomaActualizar;
    private javax.swing.JTextField txtRatingActualizar;
    private javax.swing.JTextField txtTituloActualizar;
    // End of variables declaration//GEN-END:variables
}
